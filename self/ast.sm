let
    LiteralBoolean = /value.{ LiteralBoolean, value },
    LiteralInt = /value.{ LiteralInt, value },
    LiteralString = /value.{ LiteralString, value },
    LiteralNull = /().{ LiteralNull, value: null },
    Reference = /name.{ Reference, name },
    Import = /name.{ Import, name },
    Let = /(bindings, body).{ Let, bindings, body },
    Binding = /(name, value).{ Binding, name, value },
    Lambda = /(parameters, body).{ Lambda, parameters, body },
    Call = /(target, args).{ Call, target, args },
    Record = /members.{ Record, members },
    Member = /(name, value).{ Member, name, value },
    Array = /values.{ Array, values },
    Select = /(target, name).{ Select, target, name },
    Index = /(target, index).{ Index, target, index },
    Projection = /value.{ Projection, value },
    Match = /(target, clauses).{ Match, target, clauses },
    MatchClause = /(pattern, value).{ MatchClause, pattern, value },
    Variable = /name.{ Variable, name },
in {
    LiteralBoolean,
    LiteralInt,
    LiteralString,
    LiteralNull,
    Reference,
    Import,
    Let,
    Binding,
    Lambda,
    Call,
    Record,
    Member,
    Array,
    Select,
    Index,
    Projection,
    Match,
    MatchClause,
    Variable,
}